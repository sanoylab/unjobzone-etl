<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/boxicons@2.0.7/css/boxicons.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/masonry-layout@4.2.2/dist/masonry.pkgd.min.js"></script>
    <style>
        :root {
            --primary-color: #4e73df;
            --success-color: #1cc88a;
            --warning-color: #f6c23e;
            --danger-color: #e74a3b;
            --secondary-color: #858796;
        }
        
        body {
            background-color: #f8f9fc;
            font-family: 'Nunito', sans-serif;
        }

        .dashboard-header {
            background: linear-gradient(135deg, var(--primary-color) 0%, #224abe 100%);
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .card {
            border: none;
            border-radius: 0.75rem;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
            margin-bottom: 1.5rem;
            transition: transform 0.2s;
        }

        .card:hover {
            transform: translateY(-5px);
        }

        .card-header {
            background: white;
            border-bottom: 1px solid #e3e6f0;
            padding: 1rem 1.25rem;
            font-weight: bold;
            color: #4e73df;
        }

        .stats-card {
            border-left: 0.25rem solid;
        }

        .stats-card.total { border-left-color: var(--primary-color); }
        .stats-card.active { border-left-color: var(--success-color); }
        .stats-card.closed { border-left-color: var(--danger-color); }

        .stats-card .card-body {
            padding: 1.25rem;
        }

        .stats-card .stat-label {
            text-transform: uppercase;
            font-size: 0.7rem;
            font-weight: bold;
            color: var(--secondary-color);
            margin-bottom: 0.25rem;
        }

        .stats-card .stat-value {
            font-size: 1.5rem;
            font-weight: bold;
            color: #5a5c69;
            margin-bottom: 0;
        }

        .update-item {
            padding: 1rem;
            border-left: 3px solid var(--primary-color);
            margin-bottom: 0.5rem;
            background: white;
            transition: transform 0.2s;
        }

        .update-item:hover {
            transform: translateX(5px);
        }

        .time-ago {
            font-size: 0.85rem;
            color: var(--secondary-color);
        }

        .chart-container {
            position: relative;
            height: 250px;
            margin-bottom: 1rem;
        }

        .refresh-timer {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 2rem;
            font-size: 0.9rem;
        }

        .org-badge {
            font-size: 0.8rem;
            padding: 0.3rem 0.6rem;
            border-radius: 1rem;
            margin-right: 0.5rem;
        }

        .status-badge {
            font-size: 0.8rem;
            padding: 0.3rem 0.6rem;
            border-radius: 1rem;
        }

        .update-note {
            font-size: 0.9rem;
            color: var(--secondary-color);
            margin-top: 0.5rem;
        }

        .etl-schedule {
            background: linear-gradient(135deg, #f8f9fc 0%, #e3e6f0 100%);
            padding: 1rem;
            border-radius: 0.5rem;
            margin-bottom: 1rem;
        }

        .etl-schedule-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.5rem 0;
            border-bottom: 1px solid #e3e6f0;
        }

        .etl-schedule-item:last-child {
            border-bottom: none;
        }

        .progress {
            height: 0.5rem;
            border-radius: 1rem;
        }

        .timeline {
            position: relative;
            padding: 1rem 0;
        }

        .timeline-item {
            position: relative;
            padding-left: 2rem;
            margin-bottom: 1rem;
        }

        .timeline-item::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            width: 1rem;
            height: 1rem;
            border-radius: 50%;
            background: var(--primary-color);
        }

        .timeline-item::after {
            content: '';
            position: absolute;
            left: 0.5rem;
            top: 1rem;
            width: 2px;
            height: calc(100% + 1rem);
            background: var(--primary-color);
        }

        .timeline-item:last-child::after {
            display: none;
        }

        .grid {
            display: grid;
            grid-gap: 1.5rem;
            grid-template-columns: repeat(2, 1fr);
        }

        .grid-item {
            margin-bottom: 1.5rem;
        }

        @media (max-width: 768px) {
            .grid {
                grid-template-columns: 1fr;
            }
        }

        .chart-card {
            height: 100%;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stats-card {
            background: white;
            border-radius: 1rem;
            padding: 1.5rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            transition: transform 0.3s ease;
            border-left: 4px solid;
        }

        .stats-card:hover {
            transform: translateY(-5px);
        }

        .stats-card.total { 
            border-left-color: var(--primary-color);
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fc 100%);
        }
        .stats-card.active { 
            border-left-color: var(--success-color);
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fc 100%);
        }
        .stats-card.closed { 
            border-left-color: var(--danger-color);
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fc 100%);
        }

        .stats-card .stat-label {
            font-size: 0.9rem;
            font-weight: 600;
            color: var(--secondary-color);
            margin-bottom: 0.5rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .stats-card .stat-value {
            font-size: 2rem;
            font-weight: 700;
            color: #2e384d;
            margin-bottom: 0;
        }

        .main-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .card {
            background: white;
            border-radius: 1rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            transition: transform 0.3s ease;
            height: 100%;
        }

        .card:hover {
            transform: translateY(-5px);
        }

        .card-header {
            background: white;
            border-bottom: 1px solid #e3e6f0;
            padding: 1.25rem;
            font-weight: 600;
            color: #2e384d;
            border-radius: 1rem 1rem 0 0 !important;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .card-header i {
            font-size: 1.25rem;
            color: var(--primary-color);
        }

        .chart-container {
            position: relative;
            height: 300px;
            padding: 1rem;
        }

        @media (max-width: 768px) {
            .stats-grid {
                grid-template-columns: 1fr;
            }
            .main-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-header">
        <div class="container">
            <h1 class="mb-0"><i class='bx bxs-dashboard'></i> <%= title %></h1>
            <p class="mb-0 mt-2 text-light">Last updated: <%= new Date().toLocaleString() %></p>
        </div>
    </div>

    <div class="container">
        <!-- Stats Overview -->
        <div class="stats-grid">
            <% 
            const totalJobs = orgStats.reduce((sum, stat) => sum + (stat.total_jobs || 0), 0);
            const activeJobs = orgStats.reduce((sum, stat) => sum + (stat.active_jobs || 0), 0);
            const closedJobs = orgStats.reduce((sum, stat) => sum + (stat.closed_jobs || 0), 0);
            %>
            
            <div class="stats-card total">
                <div class="stat-label">Total Jobs</div>
                <div class="stat-value"><%= totalJobs %></div>
                <div class="stat-description">Across all organizations</div>
            </div>
            <div class="stats-card active">
                <div class="stat-label">Active Jobs</div>
                <div class="stat-value"><%= activeJobs %></div>
                <div class="stat-description">Currently open positions</div>
            </div>
            <div class="stats-card closed">
                <div class="stat-label">Closed Jobs</div>
                <div class="stat-value"><%= closedJobs %></div>
                <div class="stat-description">No longer accepting applications</div>
            </div>
        </div>

        <!-- Main Grid -->
        <div class="main-grid">
            <!-- Jobs by Organization Chart -->
            <div class="card">
                <div class="card-header">
                    <i class='bx bxs-pie-chart-alt-2'></i> Jobs by Organization
                </div>
                <div class="card-body">
                    <div class="chart-container">
                        <canvas id="orgChart" 
                                data-labels='<%- JSON.stringify(orgStats.map(stat => stat.data_source)) %>'
                                data-values='<%- JSON.stringify(orgStats.map(stat => stat.total_jobs)) %>'></canvas>
                    </div>
                </div>
            </div>

            <!-- Jobs by Status Chart -->
            <div class="card">
                <div class="card-header">
                    <i class='bx bxs-bar-chart-alt-2'></i> Jobs by Status
                </div>
                <div class="card-body">
                    <div class="chart-container">
                        <canvas id="statusChart"
                                data-active="<%= activeJobs %>"
                                data-closed="<%= closedJobs %>"></canvas>
                    </div>
                </div>
            </div>

            <!-- Recent Updates -->
            <div class="card">
                <div class="card-header">
                    <i class='bx bxs-time'></i> Recent Updates
                </div>
                <div class="card-body">
                    <% recentUpdates.forEach(update => { %>
                        <div class="update-item">
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="org-badge bg-primary"><%= update.data_source %></span>
                                <span class="time-ago"><%= new Date(update.updated_at).toLocaleString() %></span>
                            </div>
                            <div class="mt-2"><%= update.job_title %></div>
                            <% if (update.notes) { %>
                                <div class="update-note"><%= update.notes %></div>
                            <% } %>
                        </div>
                    <% }); %>
                </div>
            </div>

            <!-- ETL Schedule -->
            <div class="card">
                <div class="card-header">
                    <i class='bx bxs-calendar'></i> ETL Schedule
                </div>
                <div class="card-body">
                    <div class="etl-schedule">
                        <% Object.entries(nextRuns).forEach(([org, run]) => { %>
                            <div class="etl-schedule-item">
                                <div><%= org %></div>
                                <div>
                                    <span class="time-ago">
                                        <% if (run.nextRun) { %>
                                            Next run: <%= new Date(run.nextRun).toLocaleString('en-US', { 
                                                timeZone: 'UTC',
                                                year: 'numeric',
                                                month: 'short',
                                                day: 'numeric',
                                                hour: '2-digit',
                                                minute: '2-digit'
                                            }) %>
                                        <% } else { %>
                                            No scheduled run
                                        <% } %>
                                    </span>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="refresh-timer">
        <i class='bx bx-refresh'></i> Refreshing in <span id="countdown">300</span>s
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Organization Chart
            const orgCanvas = document.getElementById('orgChart');
            const orgCtx = orgCanvas.getContext('2d');
            const orgData = {
                labels: JSON.parse(orgCanvas.dataset.labels),
                datasets: [{
                    data: JSON.parse(orgCanvas.dataset.values),
                    backgroundColor: [
                        '#4e73df',
                        '#1cc88a',
                        '#36b9cc',
                        '#f6c23e',
                        '#e74a3b'
                    ]
                }]
            };

            // Status Chart
            const statusCanvas = document.getElementById('statusChart');
            const statusCtx = statusCanvas.getContext('2d');
            const statusData = {
                labels: ['Active', 'Closed'],
                datasets: [{
                    data: [
                        parseInt(statusCanvas.dataset.active),
                        parseInt(statusCanvas.dataset.closed)
                    ],
                    backgroundColor: [
                        '#1cc88a',
                        '#e74a3b'
                    ]
                }]
            };

            // Initialize charts
            new Chart(orgCtx, {
                type: 'pie',
                data: orgData,
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });

            new Chart(statusCtx, {
                type: 'doughnut',
                data: statusData,
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
        });

        // Countdown timer
        let countdown = 300;
        const countdownElement = document.getElementById('countdown');
        
        setInterval(() => {
            countdown--;
            countdownElement.textContent = countdown;
            if (countdown <= 0) {
                window.location.reload();
            }
        }, 1000);
    </script>
</body>
</html> 